#
# Copyright The CloudNativePG Contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Default values for CloudNativePG.
# This is a YAML-formatted file.
# Please declare variables to be passed to your templates.

# Common Parameters
# @section -- Common Parameters

# -- Generic NameOverride
# @section -- Common Parameters
nameOverride: ""

# -- Generic FullnameOverride
# @section -- Common Parameters
fullnameOverride: ""

# -- Add annotations to all resources.
# @section -- Common Parameters
commonAnnotations: {}

# -- add annotations to pods
# @section -- Common Parameters
podAnnotations: {}

# -- add labels to pods
# @section -- Common Parameters
podLabels: {}

# -- Helm install Mode : ClusterWide, Namespaced, AdminForNamespaced, NamespacedWithWebhooks, Free
# @section -- Common Parameters
installMode: "ClusterWide"

# -- Namespaces where the operator should manage its CRDs.
# @section -- Common Parameters
managedNamespaces: []

# -- installCRDs determines whether Custom Resource Definitions (CRD) are installed by the chart.
# @section -- Common Parameters
installCRDs: true

# Describes features to enable/disable.
features:
  # Describes features to enable/disable at cluster level.
  cluster:
    # -- Global flag to enable/disable everything at cluster level.
    # @section -- Features
    enabled: true
    # -- Enable Mutating / Validating WebHooks.
    # @section -- Features
    webhooks: true
    # -- Enable ClusterRole for Operator.
    # @section -- Features
    role: true
    # -- Enable ClusterRoleBinding for Operator.
    # @section -- Features
    rolebinding: true
    # -- Enable ClusterRole / ClusterRoleBinding for User RBAC
    # @section -- Features
    user: true
  # Describes features to enable/disable inside Operator's Namespace.
  operator: 
    # -- Global flag to enable/disable everything inside Operator's Namespace.
    # @section -- Features
    enabled: true
    # -- Enable Operator ConfigMap or Secret creation.
    # @section -- Features
    configuration: true
    # -- Enable Operator Deployment creation.
    # @section -- Features
    deployment: true
    # -- Enable Monitoring ConfigMap creation.
    # @section -- Features
    monitoring: true
    # -- Enable NetworkPolicy creation.
    # @section -- Features
    networkpolicy: false
    # -- Enable PodMonitor creation.
    # @section -- Features
    podmonitor: true
    # -- Enable Role creation. 
    # @section -- Features
    role: true
    # -- Enable RoleBinding creation.
    # @section -- Features
    rolebinding: true
    # -- Enable Service creation for WebHooks.
    # @section -- Features
    service: true
    # -- Enable ServiceAccount for Operator.
    # @section -- Features
    serviceaccount: true
  # Describes features to enable/disable inside managed namespaces.
  # @ignore
  managed:
    # -- Global flag to enable/disable everything inside managed namespaces.
    # @section -- Features
    enabled: true
    # -- Enable Role creation inside managed Namespace.
    # @section -- Features
    role: true
    # -- Enable RoleBinding creation inside managed Namespace.
    # @section -- Features
    rolebinding: true

# Describes the capabilities the operator should have.
capabilities:
  # -- Specifies whether the operator can have Node(Get,List,Watch) privileges at Cluster Level.
  # @section -- Capabilities
  nodeList: true
  # -- Specifies whether the operator is installed in a secure namespace.
  # @section -- Capabilities
  secureNamespace: false
  # -- Specifies whether the operator can manage PodMonitor.
  # @section -- Capabilities
  podMonitor: true
  # -- Specifies whether VolumeSnapshot is available.
  # @section -- Capabilities
  volumeSnapshot: true
  # -- Specifies whether the operator can have ClusterImageCatalog(Get,List,Watch) privileges at Cluster Level.
  # @section -- Capabilities
  clusterImageCatalog: true

# -- kubeAPIServerIP is the IP address of the Kubernetes API server from inside cluster.
# @section -- Common Parameters
kubeAPIServerIP: null

# Operator
operator:
  # Operator configuration.
  configuration:
    # -- The name of the configmap/secret to use.
    # @section -- Operator Configuration
    name: ""
    # -- Specifies whether it should be stored in a secret, instead of a configmap.
    # @section -- Operator Configuration
    secret: false
    # The content of the configmap/secret
    data:
      # Stock Parameters
      # -- Determines the lifetime of the generated certificates in days. Default is 90.
      # @section -- Operator Configuration
      CERTIFICATE_DURATION: "365"
      # -- Determines the threshold, in days, for identifying a certificate as expiring. Default is 7.
      # @section -- Operator Configuration
      EXPIRING_CHECK_THRESHOLD: "30"
      # -- name of an additional pull secret to be defined in the operator's namespace and to be used to download images
      # @section -- Operator Configuration
      PULL_SECRET_NAME: ""
      # -- when set to true, enables in-place updates of the instance manager after an update
      #    of the operator, avoiding rolling updates of the cluster (default false)
      # @section -- Operator Configuration
      ENABLE_INSTANCE_MANAGER_INPLACE_UPDATES: "false"
      # -- Enables to delete Postgres pod if its PVC is stuck in Resizing condition.
      #    This feature is mainly for the Azure environment (default false)
      # @section -- Operator Configuration
      ENABLE_AZURE_PVC_UPDATES: "false"
      # -- when set to true, will create -any service for the cluster. Default is false
      # @section -- Operator Configuration
      CREATE_ANY_SERVICE: "false"
      # -- delay in seconds between the rollout of two clusters. Default is 0
      #    The duration (in seconds) to wait between the roll-outs of different
      #    clusters during an operator upgrade. This setting controls the
      #    timing of upgrades across clusters, spreading them out to reduce
      #    system impact. The default value is 0, which means no delay between
      #    PostgreSQL cluster upgrades.
      # @section -- Operator Configuration
      CLUSTERS_ROLLOUT_DELAY: 0
      # -- delay in seconds between the rollout of two instances. Default is 0
      #    The duration (in seconds) to wait between roll-outs of individual
      #    PostgreSQL instances within the same cluster during an operator
      #    upgrade. The default value is 0, meaning no delay between upgrades
      #    of instances in the same PostgreSQL cluster.
      # @section -- Operator Configuration
      INSTANCES_ROLLOUT_DELAY: 0
      # -- comma-separated list of plugins to always be included in the Cluster reconciliation
      # @section -- Operator Configuration
      INCLUDE_PLUGINS: ""

      # Stock Parameters but are setted by this Helm Chart, DO NOT TOUCH
      # -- WATCH_NAMESPACE: Comma separated list of namesapces to watch for, or empty for Cluster Wide. Default is "".
      #WATCH_NAMESPACE: "{{ .Values.managedNamespaces | join "," }}"
      # -- OPERATOR_NAMESPACE: The namespace in which the operator is installed.
      #OPERATOR_NAMESPACE: {{ .Release.Namespace }}
      # -- OPERATOR_IMAGE_NAME: The image name of the operator.
      #OPERATOR_IMAGE_NAME: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
      # -- OPERATOR_SELECTOR: The label selector to use for the operator.
      #OPERATOR_SELECTOR: "app.kubernetes.io/name=cloudnative-pg"
      # -- POSTGRES_IMAGE_NAME: indicates the name of the image to use for the PostgreSQL container
      #POSTGRES_IMAGE_NAME: "ghcr.io/cloudnative-pg/postgresql:17.0"
      # -- MONITORING_QUERIES_CONFIGMAP: indicates the name of the configmap containing the monitoring queries
      #MONITORING_QUERIES_CONFIGMAP: "{{ .Values.monitoringQueriesConfigMap.name }}"
      # -- MONITORING_QUERIES_SECRET: indicates the name of the secret containing the monitoring queries (unused)
      #MONITORING_QUERIES_SECRET: ""

      # Stock Parameters but meaning has changed
      # -- List of annotations that should be inherited from the parent object to the child object (not only cluster).
      # @section -- Operator Configuration
      INHERITED_ANNOTATIONS: prometheus.io/scrape, prometheus.io/path, prometheus.io/port
      # -- List of labels that should be inherited from the parent object to the child object (not only cluster).
      # @section -- Operator Configuration
      INHERITED_LABELS: "" 

      # New Parameters
      # -- If set to true, the operator will use filter "cnpg.io/reconcile=true" for objects in cache.
      # @section -- Operator Configuration
      CLUSTER_WIDE_CACHE_FILTER: "true"
      # -- List of labels that MUST be present on every resource managed by the operator.
      # @section -- Operator Configuration
      MANDATORY_LABELS: "" 
      # -- List of annotations that MUST be present on every resource managed by the operator.
      # @section -- Operator Configuration
      MANDATORY_ANNOTATIONS: prometheus.io/port=9187, prometheus.io/scrape=true, prometheus.io/path=/metrics
      # -- The default storage class to use for new clusters, default is Kubernetes' default.
      # @section -- Operator Configuration
      DEFAULT_STORAGE_CLASS: ""
      # -- If set to true, the operator will manage Webhooks certificates. (default true)
      # @section -- Operator Configuration
      WEBHOOK_ENABLED: "true"
      # -- The name of the secret to use for the Webhook.
      # @section -- Operator Configuration
      WEBHOOK_SECRET_NAME: "cnpg-webhook-cert"
      # -- The name of the secret containing the CA certificate.
      # @section -- Operator Configuration
      CA_SECRET_NAME: "cnpg-ca-secret"

      # New Parameters but are setted by this Helm Chart, DO NOT TOUCH
      # -- WEBHOOK_SERVICE_NAME: The name of the service to use for the Webhook.
      #WEBHOOK_SERVICE_NAME: "{{ .Values.service.name }}"
      # -- MUTATING_WEBHOOK_NAME: The name of the mutating webhook.
      #MUTATING_WEBHOOK_NAME: "{{ include "cloudnative-pg.mutatingWebhookName" . }}"
      # -- VALIDATING_WEBHOOK_NAME: The name of the validating webhook.
      #VALIDATING_WEBHOOK_NAME: "{{ include "cloudnative-pg.validationWebhookName" . }}"
  deployment:
    # -- Number of replicas.
    # @section -- Operator Configuration
    replicaCount: 1
    # -- Listening port for the webhooks.
    # @section -- Operator Configuration
    port: 9443
    # Operator's image configuration.
    image:
      # -- The image repository to pull from.
      # @section -- Operator Configuration
      repository: ghcr.io/fyannk/cloudnative-pg-testing
      # -- The imagePullPolicy to use.
      # -- Options: Always, Never, IfNotPresent
      # @section -- Operator Configuration
      pullPolicy: IfNotPresent
      # -- Overrides the image tag whose default is the chart appVersion.
      # @section -- Operator Configuration
      tag: ""
    # -- Image pull secrets in case of private repository.
    # -- This secret should exist, but MUST HAVE label cnpg.io/reconcile=true
    # @section -- Operator Configuration
    imagePullSecrets:
    - name: cnpg-pull-secret
    hostNetwork: false
    dnsPolicy: ""
    # -- Additinal arguments to be added to the operator's args list.
    # @section -- Operator Configuration
    additionalArgs: []
    # -- Array containing extra environment variables which can be templated.
    # For example:
    #  - name: RELEASE_NAME
    #    value: "{{ .Release.Name }}"
    #  - name: MY_VAR
    #    value: "mySpecialKey"
    # @section -- Operator Configuration
    additionalEnv: []
    # -- Container Security Context.
    # @section -- Operator Configuration
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsUser: 10001
      runAsGroup: 10001
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - "ALL"
    # -- Security Context for the whole pod.
    # @section -- Operator Configuration
    podSecurityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
      # fsGroup: 2000

    # -- Priority indicates the importance of a Pod relative to other Pods.
    # @section -- Operator Configuration
    priorityClassName: ""
    # -- Resources to allocate for the operator.
    # @section -- Operator Configuration
    resources:
      limits:
        cpu: 100m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi
    # -- Operator's probes configuration.
    # @section -- Operator Configuration
    livenessProbe:
      initialDelaySeconds: 3
    # -- Operator's readiness probe configuration.
    # @section -- Operator Configuration
    readinessProbe:
      initialDelaySeconds: 3

    # -- Nodeselector for the operator to be installed.
    # @section -- Operator Configuration
    nodeSelector: {}

    # -- Tolerations for the operator to be installed.
    # @section -- Operator Configuration
    tolerations: []

    # -- Affinity for the operator to be installed.
    # @section -- Operator Configuration
    affinity: {}
  # Operator's service account definition.
  serviceAccount:
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template.
    # @section -- Operator Configuration
    name: ""
  # Default monitoring queries
  monitoring:
    # -- The name of the default monitoring configmap.
    # @section -- Operator Configuration
    name: ""
    # -- A string representation of a YAML defining monitoring queries.
    # @section -- Operator Configuration
    queries: null
  # Configure service for the operator.
  service:
    # -- The type of service to use.
    # @section -- Operator Configuration
    type: ClusterIP
    # -- The name of the service to use.
    # @section -- Operator Configuration
    name: ""
    # -- The port to use.
    # @section -- Operator Configuration
    port: 443
  # Configure PodMonitor for the operator.
  podmonitor:
    # -- Metrics relabel configurations to apply to samples before ingestion.
    # @section -- Operator Configuration
    metricRelabelings: []
    # -- Relabel configurations to apply to samples before scraping.
    # @section -- Operator Configuration
    relabelings: []
    # -- Additional labels for the podMonitor
    # @section -- Operator Configuration
    additionalLabels: {}
    # deploy a grafana dashboard (DEPRECATED)
    grafanaDashboard:
      # -- Allows overriding the namespace where the ConfigMap will be created, defaulting to the same one as the Release.
      # @section -- Operator Configuration
      namespace: ""
      # -- The name of the ConfigMap containing the dashboard.
      # @section -- Operator Configuration
      configMapName: "cnpg-grafana-dashboard"
      # -- Label that ConfigMaps should have to be loaded as dashboards.  DEPRECATED: Use labels instead.
      # @section -- Operator Configuration
      sidecarLabel: "grafana_dashboard"
      # -- Label value that ConfigMaps should have to be loaded as dashboards.  DEPRECATED: Use labels instead.
      # @section -- Operator Configuration
      sidecarLabelValue: "1"
      # -- Labels that ConfigMaps should have to get configured in Grafana.
      # @section -- Operator Configuration
      labels: {}
      # -- Annotations that ConfigMaps can have to get configured in Grafana.
      # @section -- Operator Configuration
      annotations: {}

# Describes resources at cluster level.
cluster:
  # webhook configuration.
  webhooks:
    # -- Listening port of the webhook.
    # @section -- Cluster
    port: 9443
    # -- name of the cert-manager certificate to use with the webhook.
    # @section -- Cluster
    certManagerCert: null
    # -- whether the operator manages the webhook certificates automatically.
    # @section -- Cluster
    manageCerts: true
    # -- MutatingWebHook failure policy
    # @section -- Cluster
    mutatingFailurePolicy: Fail
    # -- ValidatingWebHook failure policy
    # @section -- Cluster
    validatingFailurePolicy: Fail
  user:
    # -- Aggregate ClusterRoles to Kubernetes default user-facing roles.
    # Ref: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
    # @section -- Cluster
    aggregateClusterRoles: false
